<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <!-- Include the CesiumJS JavaScript and CSS files -->
    <script src="https://cesium.com/downloads/cesiumjs/releases/1.101/Build/Cesium/Cesium.js"></script>
    <link href="https://cesium.com/downloads/cesiumjs/releases/1.101/Build/Cesium/Widgets/widgets.css" rel="stylesheet">
    <title>3D No-Fly Zone Browser</title>
</head>

<body>
    <div id="cesiumContainer"></div>
    <script>
        // Your access token can be found at: https://ion.cesium.com/tokens.
        // This is the default access token from your ion account

        Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI0NTdjNTVjNC1iMzczLTQyOTItODExZS00YTYzYWRiN2RiZDciLCJpZCI6MTE2NjQ4LCJpYXQiOjE2Njk4Mzg4Njl9.m_PVHoBoJOTAftNt-W3NHlm4dnDqyaxO98XPpwaNBIQ';

        // Initialize the Cesium Viewer in the HTML element with the `cesiumContainer` ID.
        // See: https://cesium.com/learn/cesiumjs/ref-doc/Viewer.html?classFilter=Viewer
        const viewer = new Cesium.Viewer('cesiumContainer', {
            // baseLayerPicker: false, // Removes the ability to play with the underlying maps
            animation: false,       // Removes the animation "speed-dial" in the bottom left of the window
            homeButton: false,      // Removes the ability to spin out to the whole earth
            geocoder: false,
            projectionPicker: false,
            terrainProvider: Cesium.createWorldTerrain(),
            // Uncomment these lines to have OpenStreetMap overlaid on the terrain, rather than Satellite imagery
            // imageryProvider: new Cesium.OpenStreetMapImageryProvider({
            //     url: 'https://a.tile.openstreetmap.org/'
            // })
        });
        const options = {
            camera: viewer.scene.camera,
            canvas: viewer.scene.canvas,
            screenOverlayContainer: viewer.container,
            clampToGround: true,                        // Raises the lat/lons to ground level
            strokeWidth: 3,
            trackColor: Cesium.Color.YELLOW
        };

        // Add Cesium OSM Buildings, a global 3D buildings layer.
        const buildingTileset = viewer.scene.primitives.add(Cesium.createOsmBuildings());

        // Fly the camera to Vodafone HQ in Newbury at the given longitude, latitude, and height.
        viewer.camera.flyTo({
            destination: Cesium.Cartesian3.fromDegrees(-1.3196072, 51.411, 300),
            orientation: {
                heading: Cesium.Math.toRadians(0.0),
                pitch: Cesium.Math.toRadians(-16.0),
            }
        });

        // Create a label over the M4 Junction 13
        const motorwayJunction = { longitude: -1.31019, latitude: 51.45272, height: 130 };
        // Mark this location with a red point.
        const motorwayJunctionEntity = viewer.entities.add({
            label: {
                text: `M4 Junction 13`,
                pixelOffset: new Cesium.Cartesian2(0.0, -50),
                fillColor: Cesium.Color.WHITE,
                outlineColor: Cesium.Color.BLACK,
                outlineWidth: 2,
                style: Cesium.LabelStyle.FILL_AND_OUTLINE
            },
            position: Cesium.Cartesian3.fromDegrees(
                motorwayJunction.longitude, motorwayJunction.latitude, motorwayJunction.height),
            point: { pixelSize: 10, color: Cesium.Color.YELLOW }
        });

        const pinBuilder = new Cesium.PinBuilder();
        const noFlyZones = viewer.dataSources.add(
            // Cesium.KmlDataSource.load("data/test-flight.kml"),
            Cesium.KmlDataSource.load("data/mid-test.kml"),
            // Cesium.KmlDataSource.load("data/small-test.kml"),
            options
            //            {
            //                clampToGround: true,                        // Raises the lat/lons to ground level
            //                strokeWidth: 3,
            //                trackColor: Cesium.Color.YELLOW
            //            }
        );
        noFlyZones.show = true;
        //viewer.dataSources.add(noFlyZones, {
        //    stroke: Cesium.Color.HOTPINK,
        //    strokeWidth: 50
        //});

        // Fly the camera to this point.
        //viewer.flyTo(motorwayJunctionEntity);

    </script>
    </div>
</body>

</html>